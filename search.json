[{"categories":["kibana"],"content":" kibana无法新建索引模式，F12 “403”: 权限问题 PUT .kibana/_settings { \"index\": { \"blocks\": { \"read_only_allow_delete\": false } } } kibana磁盘满之后无法写入索引 PUT _settings { \"index\": { \"blocks\": { \"read_only_allow_delete\": \"false\" } } } ","date":"2024-10-15","objectID":"/posts/kibana/:0:0","tags":["kibana"],"title":"Kibana","uri":"/posts/kibana/"},{"categories":[null],"content":" 查看topic bin/kafka-topics.sh --list --bootstrap-server 127.0.0.1:9092 查看某个topic信息 bin/kafka-topics.sh --bootstrap-server 127.0.0.1:9092 --describe TOPICNAME 查看所有消费组 bin/kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --describe --group --all-groups 消费消息 bin/kafka-consumer-groups.sh --zookeeper 127.0.0.1:2181 --topic TOPICNAME 查看topic内容 bin/kafka-console-consumer.sh --bootstrap-server 127.0.0.1:9092 --from-beginning --topic TOPICNAME 创建topic bin/kafka-topics.sh --create --bootstrap-server 127.0.0.1:9092 --partitions 1 --replication-factor 1 --topic TOPICNAME 删除topic bin/kafka-topics.sh --delete --bootstrap-server 127.0.0.1:9092 --topic TOPICNAME bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --list bin/kafka-topics.sh --zookeeper 127.0.0.1:2181 --describe --topic TOPICNAME bin/kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --list bin/kafka-consumer-groups.sh --bootstrap-server 127.0.0.1:9092 --describe --group GROUPNAME bin/kafka-consumer-groups.sh --zookeeper 127.0.0.1:2181 --delete --group GROUPNAME bin/kafka-console-consumer.sh --bootstrap-server localhost:9092 --from-beginning --topic TOPICNAME ","date":"2024-10-15","objectID":"/posts/kafka/:0:0","tags":[null],"title":"Kafka","uri":"/posts/kafka/"},{"categories":["gitlab"],"content":"git lfs 问题 客户端配置：git config --system http.sslverify false 参考连接：https://blog.csdn.net/root_miss/article/details/81450687 ","date":"2024-10-14","objectID":"/posts/gitlab/:1:0","tags":["gitlab"],"title":"Gitlab","uri":"/posts/gitlab/"},{"categories":["gitlab"],"content":"gitlab邮箱配置 gitlab_rails['smtp_enable'] = true gitlab_rails['smtp_address'] = \"smtp.exmail.qq.com\" gitlab_rails['smtp_port'] = 25 gitlab_rails['smtp_user_name'] = \"gitlab@xxx.cn\" gitlab_rails['smtp_password'] = \"xxx\" gitlab_rails['smtp_domain'] = \"smtp.exmail.qq.com\" gitlab_rails['smtp_authentication'] = \"login\" gitlab_rails['smtp_ssl'] = false gitlab_rails['smtp_enable_starttls_auto'] = true gitlab_rails['gitlab_email_from'] = \"gitlab@xxx.cn\" user[\"git_user_email\"] = \"gitlab@xxx.cn\" ","date":"2024-10-14","objectID":"/posts/gitlab/:2:0","tags":["gitlab"],"title":"Gitlab","uri":"/posts/gitlab/"},{"categories":["gitlab"],"content":"gitlab迁移 gitlab备份 gitlab-rake gitlab:backup:create gitlab 定制相关数据服务 # 停止相关数据连接服务 gitlab-ctl stop unicorn gitlab-ctl stop sidekiq # 从1393513186编号备份中恢复 gitlab-rake gitlab:backup:restore BACKUP=1393513186 # 启动Gitlab gitlab-ctl start ","date":"2024-10-14","objectID":"/posts/gitlab/:3:0","tags":["gitlab"],"title":"Gitlab","uri":"/posts/gitlab/"},{"categories":["gitlab"],"content":"gitconfig 常用配置 [alias] ch = checkou st = status staust = 'gitst' cf = config ck = checkout ft = fetch fh = fetch br = branch brv = branch --v geturl = config --get remote.origin.url bs = bisect lg = log --graph --decorate --oneline --all cfg = config --global cfga = config --global alias. pull = pl pl = pull --rebase cm = commit -c HEAD ps = push lsr = ls-remote --heads udc = reset HEAD~ ftg = fetch --tags am = commit -amend cmd = commit --amend rsh = reset HEAD~ cmi = commit --interactive -c HEAD --reset-author i = --interactive rss = reset --soft rmc = rm --cached cp = cherry-pick cpx = cherry-pick -x bl = blame gk = gitk ltn = ls-tree -r HEAD~ --name-only lt = ls-tree -r HEAD~ --name-only ltng = ls-tree -r HEAD~ --name-only |grep lgd = log -p --full-diff bcm = \"branch -a --contains \" brc = branch -a --contains tagc = tag --contains ","date":"2024-10-14","objectID":"/posts/gitlab/:4:0","tags":["gitlab"],"title":"Gitlab","uri":"/posts/gitlab/"},{"categories":["elasticsearch"],"content":"elasticsearch伸缩容 ","date":"2024-10-14","objectID":"/posts/elasticsearch/:1:0","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["elasticsearch"],"content":"水平扩容 将现有集群中的一个节点镜像到一个新机器(主要是相关配置 插件都使用已有配置，避免再重新安装插件修改设置等) ","date":"2024-10-14","objectID":"/posts/elasticsearch/:2:0","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["elasticsearch"],"content":"更改 elasticsearch.yml 配置 # new add config node.master: false node.data: true # modify config node.name: new_instance_name network.host: real_intranet_address ","date":"2024-10-14","objectID":"/posts/elasticsearch/:2:1","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["elasticsearch"],"content":"清空数据目录 方案一：清空数据目录 # default path.data /var/lib/elasticsearch # exec shell rm -rf /var/lib/elasticsearch/*; 方案二：更改数据目录：path.data # new add config path.data: new_stroage_system_path # shell exec chown elasticsearch.elasticsearch /data/application/elasticsearch/ ","date":"2024-10-14","objectID":"/posts/elasticsearch/:2:2","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["elasticsearch"],"content":"start services /etc/init.d/elasticsearch start 查看集群状态：http://ip:9200/_cat/health?v 查看分片迁移进度：http://ip:9200/#/overview?host=Pd_elasticsearch 查看恢复进度：http://ip:9200/_cat/recovery?v 待平衡完成后 修改索引对应的副本数 curl -XPUT \"\u003chttp://ip:9200/INDEXNAME/_settings\u003e\" -d '{ \"index\" : { \"number_of_replicas\" : 3 } }' http://ip:9200/INDEXNAME/list/_search?pretty\u0026from=0\u0026size=1 ","date":"2024-10-14","objectID":"/posts/elasticsearch/:2:3","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["elasticsearch"],"content":"缩容操作 服务使用的es集群中应先剔除要下线的节点 恢复成之前的副本数量 curl -XPUT \"\u003chttp://ip:9200/INDEXNAME/_settings\u003e\" -d '{ \"index\" : { \"number_of_replicas\" : 2 } }' 排除es集群要下线的节点 curl -XPUT \"\u003chttp://ip:9200/_cluster/settings\u003e\" -d'{ \"transient\": { \"cluster.routing.allocation.exclude._ip\": \"要下线的ip\" } }' ","date":"2024-10-14","objectID":"/posts/elasticsearch/:3:0","tags":["elasticsearch"],"title":"Elasticsearch","uri":"/posts/elasticsearch/"},{"categories":["postgres"],"content":"导出 pg_dump -h IPADRESS -U USERNAME -t TABLENAME --column-inserts DATABASENAME \u003e BACKUPNAME.sql ","date":"2024-10-14","objectID":"/posts/postgres/:1:0","tags":["postgres"],"title":"Postgres","uri":"/posts/postgres/"},{"categories":["postgres"],"content":"表owner批量授权 REASSIGN OWNEDBY old_role [,...] TO new_role ","date":"2024-10-14","objectID":"/posts/postgres/:2:0","tags":["postgres"],"title":"Postgres","uri":"/posts/postgres/"},{"categories":["postgres"],"content":"主从配置 主节点配置 # 安装postgre # 切换postgres su - postgres # 登录 psql # 管理员用户配置密码 ALTER USER postgres WITH PASSWORD 'YourPassWord'; # 创建备份账号及权限 CREATE ROLE replica login replication encrypted password 'replica'; # 验证账号是否成功 SELECT usename from pg_user; # 验证权限 SELECT rolname from pg_roles; # 编辑pg_hba.conf,设置replica用户白名单 vim /var/lib/pgsql/9.6/data/pg_hba.conf host all all \u003c从节点的VPC IPv4网段\u003e md5 #允许VPC网段中md5密码认证连接 host replication replica \u003c从节点的VPC IPv4网段\u003e md5 #允许用户从replication数据库进行数据同步 # 编辑postgresql.conf vim /var/lib/pgsql/9.6/data/postgresql.conf # 分别找到以下参数 listen_addresses = '*' #监听的IP地址 wal_level = hot_standby #启用热备模式 synchronous_commit = on #开启同步复制 max_wal_senders = 32 #同步最大的进程数量 wal_sender_timeout = 60s #流复制主机发送数据的超时时间 max_connections = 100 #最大连接数，从库的max_connections必须要大于主库的 # 重启服务 systemctl restart postgresql-9.6.service 从节点配置 # 运行以下命令使用pg_basebackup基础备份工具指定备份目录。 pg_basebackup -D /var/lib/pgsql/9.6/data -h \u003c主节点IP\u003e -p 5432 -U replica -X stream -P # 依次运行以下命令新建并修改recovery.conf配置文件。 cp /usr/pgsql-9.6/share/recovery.conf.sample /var/lib/pgsql/9.6/data/recovery.conf vim /var/lib/pgsql/9.6/data/recovery.conf # 分别找到以下参数，并将参数修改为以下内容： standby_mode = on #声明此节点为从库 primary_conninfo = ‘host=\u003c主节点IP\u003e port=5432 user=replica password=replica’ #对应主库的连接信息 recovery_target_timeline = ‘latest’ #流复制同步到最新的数据 # 运行以下命令打开postgresql.conf文件。 vim /var/lib/pgsql/9.6/data/postgresql.conf max_connections = 1000 # 最大连接数，从节点需设置比主节点大 hot_standby = on # 开启热备 max_standby_streaming_delay = 30s # 数据流备份的最大延迟时间 wal_receiver_status_interval = 1s # 从节点向主节点报告自身状态的最长间隔时间 hot_standby_feedback = on # 如果有错误的数据复制向主进行反馈 # 运行以下命令修改数据目录的属组和属主 chown -R postgres.postgres /var/lib/pgsql/9.6/data 检测验证 # 检测验证需要主从节点之间存在数据交互，例如，从节点备份目录时，进行检测能够得到预期的结果。 pg_basebackup -D /var/lib/pgsql/96/data -h \u003c主节点IP\u003e -p 5432 -U replica -X stream -P # 在主节点中运行以下命令查看sender进程。 ps aux |grep sender # 在从节点中运行以下命令查看receiver进程。 ps aux |grep receiver # 在主节点中进入PostgreSQL交互终端，输入以下SQL语句，在主库中查看从库状态。 select * from pg_stat_replication; ","date":"2024-10-14","objectID":"/posts/postgres/:3:0","tags":["postgres"],"title":"Postgres","uri":"/posts/postgres/"},{"categories":["mysql"],"content":"常用命令 ","date":"2024-10-12","objectID":"/posts/mysql/:1:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"mysql导出 –skip-extended-insert 跳过多行写入 –skip-quote-names 跳过 ` 表名 –complete-insert 带字段的insert ","date":"2024-10-12","objectID":"/posts/mysql/:2:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"结构导出 mysqldump -uroot -pxxx \\ --default-character-set=utf8 \\ --set-gtid-purged=off \\ --compact \\ --no-data \\ --databases xxx \\ --tables xxx \u003e xxx.sql ","date":"2024-10-12","objectID":"/posts/mysql/:3:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"数据导出 mysqldump -uroot -pxxx \\ --default-character-set=utf8 \\ --set-gtid-purged=off \\ --compact \\ --no-create-info \\ --skip-quote-names \\ --complete-insert \\ --databases xxx \\ --tables xxx \u003e xxx.sql ","date":"2024-10-12","objectID":"/posts/mysql/:4:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"binlog日志查看 mysqlbinlog --base64-output=decode-rows -v -v mysql-bin.021530 \u003e021530.sql ","date":"2024-10-12","objectID":"/posts/mysql/:5:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"慢进程查看 select id,user,host,db,command,time,state,info from information_schema.PROCESSLIST order by time desc; ","date":"2024-10-12","objectID":"/posts/mysql/:6:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"Slave 链接 master 配置 CHANGE MASTER TO MASTER_HOST='IPADDRESS',MASTER_USER='UserName',MASTER_PASSWORD='PassWord',master_log_file='BinLogFile',master_log_pos=POSITION; ","date":"2024-10-12","objectID":"/posts/mysql/:7:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"从库扩容备份操作 ","date":"2024-10-12","objectID":"/posts/mysql/:8:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"1. 备份到目标机器: innobackupex --defaults-file=/etc/my.cnf --no-timestamp --user=root --password=\"PassWord\" --compress --parallel=4 --compress-threads=4 --stream=xbstream /tmp/backup | ssh root@IPADDRESS \"xbstream -x -C /DSTDIR\" ","date":"2024-10-12","objectID":"/posts/mysql/:8:1","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"2. 从库扩容操作: 目标机器解压 innobackupex --parallel=8 --decompress ./ 目标机器初始化 innobackupex --use-memory=51200M --apply-log ./ 目标机器恢复 innobackupex --defaults-file=/etc/my.cnf --copy-back ./2017-08-23_21-23-46/ 清理备份文件 find /var/lib/mysql -name \"*.qp\" | xargs rm chown -R mysql.mysql /var/lib/mysql ","date":"2024-10-12","objectID":"/posts/mysql/:8:2","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"mysql 从库繁忙配置： innodb_flush_log_at_trx_commit = 2 sync_binlog=1 set global innodb_flush_log_at_trx_commit=0; set global sync_binlog=0; ","date":"2024-10-12","objectID":"/posts/mysql/:9:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"mysql8.0密码更改原生： set global validate_password.policy=0; set global validate_password.length=1; ALTER user 'root'@'localhost' IDENTIFIED BY 'PASSWORD'; ALTER USER 'UserName'@'%' IDENTIFIED WITH mysql_native_password BY 'PassWord'; ","date":"2024-10-12","objectID":"/posts/mysql/:10:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"mysql slave 权限配置： CREATE USER 'rpl'@'172.16.1.%' IDENTIFIED BY 'xxx'; GRANT REPLICATION SLAVE, REPLICATION CLIENT ON *.* TO 'rpl'@'172.16.1.%'; ","date":"2024-10-12","objectID":"/posts/mysql/:11:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"information_schema 表空间优化 碎片大小 = 数据总大小 - 实际表空间文件大小 数据总大小 = Data_length + Index_length = 101842944 实际表空间文件大小 = rows_Avg_row_length = 101177624 碎片大小 = (101842944 - 101177624) / 1024 /1024 = 0.63MB 整理碎片 alter table table_name engine = innodb pt-online-schema-change optimize table 命令整理: show table status from DBNAME like ‘%TABLENAME%’ \\G 查看; pt-online-schema-change-shell #!/bin/bash source /etc/profile pt-online-schema-change \\ --defaults-file=/etc/my.cnf \\ -uroot -h localhost --password=PASSWORD \\ --alter=\"ENGINE=InnoDB\" \\ D=DBNAME,t=TABLENAME \\ 1--no-check-replication-filters --alter-foreign-keys-method=auto \\ 1--recursion-method=none --print \\ 1--charset=utf8 --max-load=\"Threads_running=100\" \\ 1--critical-load=\"Threads_running=200\" --execute 查看所有数据库的容量 SELECT table_schema as '数据库', sum(table_rows) as '记录数', sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)', sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)', sum(truncate(DATA_FREE/1024/1024, 2)) as '碎片占用(MB)' from information_schema.tables group by table_schema order by sum(data_length) desc, sum(index_length) desc; 查看指定库的大小 SELECT table_schema as '数据库', sum(table_rows) as '记录数', sum(truncate(data_length/1024/1024, 2)) as '数据容量(MB)', sum(truncate(index_length/1024/1024, 2)) as '索引容量(MB)', sum(truncate(DATA_FREE/1024/1024, 2)) as '碎片占用(MB)' from information_schema.tables where table_schema='DBNAME' order by data_length desc, index_length desc; 查看指定库所有表的大小 SELECT table_schema as '数据库', table_name as '表名', table_rows as '记录数', truncate(data_length/1024/1024, 2) as '数据容量(MB)', truncate(index_length/1024/1024, 2) as '索引容量(MB)', truncate(DATA_FREE/1024/1024, 2) as '碎片占用(MB)' from information_schema.tables where table_schema='DBNAME' order by data_length desc, index_length desc; 查看数据库中容量排名前十的表 USE information_schema; SELECT TABLE_SCHEMA as '数据库', table_name as '表名', table_rows as '记录数', ENGINE as '存储引擎', truncate(data_length/1024/1024, 2) as '数据容量(MB)', truncate(index_length/1024/1024, 2) as '索引容量(MB)', truncate(DATA_FREE/1024/1024, 2) as '碎片占用(MB)' from tables order by table_rows desc limit 10; ","date":"2024-10-12","objectID":"/posts/mysql/:12:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"分区 重组 ALTER TABLE tableName REORGANIZE PARTITION pmax INTO( PARTITION partitionName VALUES LESS THAN (890000000), PARTITION pmax VALUES LESS THAN MAXVALUE ); -- 语法分析: 重组对应分区表最大分区pmax,将结果放入新的分区 依次递增。 添加 -- 递增：1209600 ALTER TABLE history ADD PARTITION (PARTITION p20210820 VALUES LESS THAN (1637337600)); ","date":"2024-10-12","objectID":"/posts/mysql/:13:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["mysql"],"content":"mysql CSV入库 mysql -h IPADDRESS -uroot -pxxx DBNAME -e \"load data local infile 'CSVFILE' into table $tableName FIELDS TERMINATED BY '\\\\\\\\t';\" ","date":"2024-10-12","objectID":"/posts/mysql/:14:0","tags":["mysql"],"title":"Mysql","uri":"/posts/mysql/"},{"categories":["apisix"],"content":"Nginx proxy_pass + / 问题: location /api { proxy_pass http://api_proxy/; } # 访问: http://api.xxx.com/api/admin; # 转发效果：http://api_proxy/admin; 由于Apisix 使用的是radixtree 的写法, 导致只支持匹配规则(Full match,Prefix matching) , 并且不会去掉匹配的路径, 这个时候, 为了去掉上面的 /api , 需要使用到插件：proxy-rewrite Apisix-Router：https://apisix.apache.org/zh/docs/apisix/terminology/router Proxy-rewrite：https://apisix.apache.org/zh/docs/apisix/plugins/proxy-rewrite ngx_http_rewirte_module：https://nginx.org/en/docs/http/ngx_http_rewrite_module.html ngx_http_proxy_module：https://nginx.org/en/docs/http/ngx_http_proxy_module.html ngx_stream_proxy_module：http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html { \"uri\": \"/api*\", \"name\": \"api\", \"id\": \"489259072256738721\", \"upstream\": { \"type\": \"roundrobin\", \"pass_host\": \"pass\", \"nodes\": { \"10.1.1.1:3030\": 10 }, \"timeout\": { \"send\": 6, \"connect\": 6, \"read\": 6 }, \"scheme\": \"http\", \"keepalive_pool\": { \"idle_timeout\": 60, \"requests\": 1000, \"size\": 320 } }, \"plugins\": { \"proxy-rewrite\": { \"regex_uri\": [ \"^/api(.*)$\", \"$1\" ] } }, \"status\": 1, \"host\": \"api.xxx.com\" } ","date":"2024-10-12","objectID":"/posts/apisix/:1:0","tags":["apisix"],"title":"Apisix","uri":"/posts/apisix/"},{"categories":["macos"],"content":"安装lrsz brew install lrzsz ","date":"2024-10-12","objectID":"/posts/lrzsz/:1:0","tags":["macos"],"title":"Lrzsz","uri":"/posts/lrzsz/"},{"categories":["macos"],"content":"iterm2-send-zmodem.sh #!/bin/bash osascript -e 'tell application \"iTerm2\" to version' \u003e /dev/null 2\u003e\u00261 \u0026\u0026 NAME=iTerm2 || NAME=iTerm if [[ $NAME = \"iTerm\" ]]; then FILE=$(osascript -e 'tell application \"iTerm\" to activate' -e 'tell application \"iTerm\" to set thefile to choose file with prompt \"Choose a file to send\"' -e \"do shell script (\\\"echo \\\"\u0026(quoted form of POSIX path of thefile as Unicode text)\u0026\\\"\\\")\") else FILE=$(osascript -e 'tell application \"iTerm2\" to activate' -e 'tell application \"iTerm2\" to set thefile to choose file with prompt \"Choose a file to send\"' -e \"do shell script (\\\"echo \\\"\u0026(quoted form of POSIX path of thefile as Unicode text)\u0026\\\"\\\")\") fi if [[ $FILE = \"\" ]]; then echo Cancelled. # Send ZModem cancel echo -e \\\\x18\\\\x18\\\\x18\\\\x18\\\\x18 sleep 1 echo echo \\# Cancelled transfer else /usr/local/bin/sz \"$FILE\" --escape --binary --bufsize 4096 sleep 1 echo echo \\# Received \"$FILE\" fi ","date":"2024-10-12","objectID":"/posts/lrzsz/:2:0","tags":["macos"],"title":"Lrzsz","uri":"/posts/lrzsz/"},{"categories":["macos"],"content":"iterm2-recv-zmodem.sh #!/bin/bash osascript -e 'tell application \"iTerm2\" to version' \u003e /dev/null 2\u003e\u00261 \u0026\u0026 NAME=iTerm2 || NAME=iTerm if [[ $NAME = \"iTerm\" ]]; then FILE=$(osascript -e 'tell application \"iTerm\" to activate' -e 'tell application \"iTerm\" to set thefile to choose folder with prompt \"Choose a folder to place received files in\"' -e \"do shell script (\\\"echo \\\"\u0026(quoted form of POSIX path of thefile as Unicode text)\u0026\\\"\\\")\") else FILE=$(osascript -e 'tell application \"iTerm2\" to activate' -e 'tell application \"iTerm2\" to set thefile to choose folder with prompt \"Choose a folder to place received files in\"' -e \"do shell script (\\\"echo \\\"\u0026(quoted form of POSIX path of thefile as Unicode text)\u0026\\\"\\\")\") fi if [[ $FILE = \"\" ]]; then echo Cancelled. # Send ZModem cancel echo -e \\\\x18\\\\x18\\\\x18\\\\x18\\\\x18 sleep 1 echo echo \\# Cancelled transfer else cd \"$FILE\" /usr/local/bin/rz --rename --escape --binary --bufsize 4096 sleep 1 echo echo echo \\# Sent \\-\\\u003e $FILE fi ","date":"2024-10-12","objectID":"/posts/lrzsz/:3:0","tags":["macos"],"title":"Lrzsz","uri":"/posts/lrzsz/"},{"categories":["macos"],"content":"iterm2 triggers配置 Regular expression: rz waiting to receive.\\*\\*B0100 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-send-zmodem.sh Instant: checked Regular expression: \\*\\*B00000000000000 Action: Run Silent Coprocess Parameters: /usr/local/bin/iterm2-recv-zmodem.sh Instant: checked ","date":"2024-10-12","objectID":"/posts/lrzsz/:4:0","tags":["macos"],"title":"Lrzsz","uri":"/posts/lrzsz/"},{"categories":["tomcat"],"content":"版本号隐藏 进入到tomcat 目录 mv webapps/ROOT webapps/ROOT mkdir webapps/ROOT$(date +%Y%m%d) 编辑conf/server.xml配置文件中的配置项中添加如下配置： \u003cValve className=\"org.apache.catalina.valves.ErrorReportValve\" showReport=\"false\" showServerInfo=\"false\" /\u003e 修改后再次访问，返回404 ","date":"2024-10-12","objectID":"/posts/tomcat/:1:0","tags":["tomcat"],"title":"Tomcat","uri":"/posts/tomcat/"},{"categories":["java"],"content":"java home 配置 vim /etc/profile export JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-1.8.0.312.b07-10.p01.ky10.aarch64/jre/ export PATH=$JAVA_HOME/bin:$PATH export CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar ","date":"2024-10-12","objectID":"/posts/java/:1:0","tags":["java"],"title":"Java","uri":"/posts/java/"},{"categories":["golang"],"content":"build_packages ","date":"2024-10-12","objectID":"/posts/golang/:1:0","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"go打包命令 # 常规打包方法 go build # 使用 “-dflags” 缩小大小 go build -ldflags '-w -s' # 使用upx打包为最小程序 upx ...二进制文件 ","date":"2024-10-12","objectID":"/posts/golang/:2:0","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"示例 CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o target/NAME_`date +%Y_%m_%d` ${MAINSRCPATH} CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags '-w -s' -o pkg/PACKAGENAME ","date":"2024-10-12","objectID":"/posts/golang/:2:1","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"multi_platfrom_build ● Mac 打包Linux windows $ CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build test.go $ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go ● Linux打包Mac windows $ CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build test.go $ CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build test.go ● windows编译Linux Mac $ SET CGO_ENABLED=0SET GOOS=darwin3 SET GOARCH=amd64 go build test.go $ SET CGO_ENABLED=0 SET GOOS=linux SET GOARCH=amd64 go build test.go 参数说明 GOOS：目标可执行程序运行操作系统，支持 darwin，freebsd，linux，windows GOARCH：目标可执行程序操作系统构架，包括 386，amd64，arm ","date":"2024-10-12","objectID":"/posts/golang/:2:2","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"go 代理配置 go env -w GOPROXY=https://goproxy.cn,direct ","date":"2024-10-12","objectID":"/posts/golang/:3:0","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"fmt 使用 ","date":"2024-10-12","objectID":"/posts/golang/:4:0","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"General %v // 以默认的方式打印变量的值 %T // 打印变量的类型 ","date":"2024-10-12","objectID":"/posts/golang/:4:1","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Integer %+d // 带符号的整型，fmt.Printf(\"%+d\", 255)输出+255 %q // 打印单引号 %o // 不带零的八进制 %#o // 带零的八进制 %x // 小写的十六进制 %X // 大写的十六进制 %#x // 带0x的十六进制 %U // 打印Unicode字符 %#U // 打印带字符的Unicode %b // 打印整型的二进制 ","date":"2024-10-12","objectID":"/posts/golang/:4:2","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Integer width %5d // 表示该整型最大长度是5，下面这段代码 %-5d // 则相反，打印结果会自动左对齐 %05d // 会在数字前面补零。 ","date":"2024-10-12","objectID":"/posts/golang/:4:3","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Float %f(=%.6f) // 6位小数点 %e(=%.6e) // 6位小数点（科学计数法） %g // 用最少的数字来表示 %.3g // 最多3位数字来表示 %.3f // 最多3位小数来表示 ","date":"2024-10-12","objectID":"/posts/golang/:4:4","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"String %s //正常输出字符串 %q //字符串带双引号，字符串中的引号带转义符 %#q //字符串带反引号，如果字符串内有反引号，就用双引号代替 %x //将字符串转换为小写的16进制格式 %X //将字符串转换为大写的16进制格式 %x //带空格的16进制格式 ","date":"2024-10-12","objectID":"/posts/golang/:4:5","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"String Width (以5做例子） %5s // 最小宽度为5 %-5s // 最小宽度为5（左对齐） %.5s // 最大宽度为5 %5.7s // 最小宽度为5，最大宽度为7 %-5.7s // 最小宽度为5，最大宽度为7（左对齐） %5.3s // 如果宽度大于3，则截断 %05s // 如果宽度小于5，就会在字符串前面补零 ","date":"2024-10-12","objectID":"/posts/golang/:4:6","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Struct %v // 正常打印。比如：{sam {12345 67890}} %+v // 带字段名称。比如：{name:sam phone:{mobile:12345 office:67890} %#v // 用Go的语法打印。 // 比如main.People{name:\"sam\", phone:main.Phone{mobile:\"12345\", office:\"67890\"}} ","date":"2024-10-12","objectID":"/posts/golang/:4:7","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Boolean %t // 打印true或false ","date":"2024-10-12","objectID":"/posts/golang/:4:8","tags":["golang"],"title":"Golang","uri":"/posts/golang/"},{"categories":["golang"],"content":"Pointer %p // 带0x的指针 %#p // 不带0x的指针 ","date":"2024-10-12","objectID":"/posts/golang/:4:9","tags":["golang"],"title":"Golang","uri":"/posts/golang/"}]